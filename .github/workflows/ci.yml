name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24', '1.25']

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check (gofmt -l)
      run: |
        CHANGED=$(gofmt -l .)
        if [ -n "$CHANGED" ]; then
          echo "The following files are not gofmt-ed:" >&2
          echo "$CHANGED" | sed 's/^/  - /'
          echo
          echo "Run: gofmt -w ." >&2
          exit 1
        fi

    - name: Vet
      run: go vet ./...

    - name: Test
      run: go test -v ./...

    - name: Test with race detector
      run: go test -race -v ./...

    - name: Test coverage
      run: go test -coverprofile=coverage.txt

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.out
        flags: unittests

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24', '1.25']

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
          version: latest

  security:
    name: Security
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24', '1.25']

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}


    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      env:
        GOTOOLCHAIN: auto
      with:
        args: ./...
